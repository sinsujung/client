<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
	<!-- ex_form.html -->
	<!-- 
	
		폼, Form
		- 입력 양식, 입력 컨트롤
		- 클라이언트(사용자)로부터 입력장치(키보드, 마우스, 터치 등)을 통해서 데이터를 입력받는 역할
		- 입력 데이터 > 서버로 전송 > 업무 활용 or 데이터베이스 저장 등..
		ex) 텍스트 박스, 버튼, 체크 박스, 라디오 버튼 등..
		- <form> + <form>의 자식 태그들..
		
		<form>
		- 모든 입력 컨트롤을 감싸는 컨테이너
		- 스스로는 랜더링 결과가 없다.(출력X)
		- 입력한 값을 서버로 전송하는 역할(*****)
		
		form.method
		- 데이터를 전송하는 방식
		- 택배(일반 우편 | 등기 우편)
		
		1. POST
			- ex18_server.jsp
			- 데이터를 상자안에 담아서 전송
			- 데이터가 노출 x > 보안 O
			- 전송하는 데이터의 최대 길이 제한 > 무제한
		
		2. GET		
			- ex18_server.jsp?age=20
			- 데이터를 송장에 붙여서 전송
			- 전송되는 데이터가 노출(주소창) > 보안 x
			- 전송하는 데이터의 최대 길이 제한 > 256자 > 8,000 바이트
			- 긴 데이터는 전송 X
		
		form.action
		- 데이터를 수신하는 서버측 URL
		- 받는 사람 주소
		- 서버측 동작하고 있는 프로그램 주소 > JSP, Servlet, Spring 주소
	
	 -->
	
	<h1>데이터 입력</h1>
	
	<form method="GET" action="ex18_server.jsp">
		나이: <input type="text" name="age">
		<br>
		<input type="submit" value="보내기">	
	</form>

	<hr>
	
	<h1>폼 컨트롤</h1>
	
	<form method="POST" actoin="ex18_server.jsp">
	<form>
		
		<!-- 
		
			<input>
			- 인라인 태그
			- 단독 태그
			- input.type: 입력 컨트롤 종류 지정
			- input.name: 식별자. HTML에서 사용. 서버측과 연동할 때 사용
			- input.id: 식별자. CSS, JavaScript에서 사용
			- input.class: 식별자. CSS, JavaScript에서 사용
			- input.size: 길이(문자 개수)
			- input.maxlength: 최대 입력 길이(글자수) + 유효성 검사
			- input.value: 컨트롤의 입력값(현재 입력값)
			- input.readonly: 읽기전용(전원 ON) > 서버로 전송이 가능
			- input.disabled: 비활성화(전원 OFF) > 서버로 전송이 불가능
			- input.accesskey: 바로가기(Alt + 조합키)
			- input.autofocus: 자동 포커스
			- input.autocomplete: 자동 완성 끄기
		 -->
			텍스트 박스(단일 라인):
			<input type="text" name="txt1" id="txt1" class="txt" size="30" 
			value="Hong" accesskey="s" autofocus autocomplete="off">
						
			<input type="submit" value="보내기">
			
			<hr>

			<!-- 
			
				암호 상자, Password Box, Masked Text Box
				- 모든 속성이 텍스트 박스와 동일
			
			 -->
			 텍스트 박스(암호):
			 <input type="password">
		
	</form>


</body>
</html>